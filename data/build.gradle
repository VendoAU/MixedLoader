plugins {
    id "idea"
    id "net.neoforged.gradle" version "[6.0.18,6.2)"
    id "org.parchmentmc.librarian.forgegradle" version "1.+"
}

archivesBaseName = "${mod_name}-datagen-${minecraft_version}"

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    copyIdeResources = true

    runs {
        data {
            ideaModule "${rootProject.name}.data.main"
            args "--mod", mod_id, "--all", "--output", file("src/generated/resources"), "--existing", file("src/main/resources")
            mods {
                source sourceSets.main
                source project(":common").sourceSets.main
            }
        }
    }
}

dependencies {
    minecraft "net.neoforged:forge:${minecraft_version}-${neoforge_version}"
    compileOnly project(":common")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mod_id  : mod_id,
            mod_name: mod_name
    ]
    inputs.properties replaceProperties

    filesMatching(["META-INF/mods.toml"]) {
        expand replaceProperties + [project: project]
    }
}